net
{
	recoveryenginegenerator6944530267470113528l.team = __Map__;
	propagationenginegenerator1791944048146838126L = "edu.ucla.belief.approx.BeliefPropagationSettings@3686adb3";
	jenginegenerator6060830225489488864L = "edu.ucla.belief.inference.JoinTreeSettings@76a0e3d7";
	huginenginegenerator3061656038650325130L = "edu.ucla.belief.inference.JoinTreeSettings@34e2159d";
	zcenginegenerator6314619632174047614L = "edu.ucla.belief.inference.JoinTreeSettings@7f6e4c20";
	recoveryenginegenerator6944530267470113528l = "edu.ucla.util.SettingsImpl@7c869d4b";
	node_size = (130.0 55.0);
	rcenginegenerator1317510038576835557L = "edu.ucla.belief.inference.RCSettings@dc97757";
}

node Reliable
{
	states = ("Reliable" "NotReliable" );
	position = (21 -373);
	diagnosistype = "AUXILIARY";
	DSLxSUBMODEL = "Root Submodel";
	ismapvariable = "false";
	ID = "variable6";
	label = "Reliable";
	DSLxEXTRA_DEFINITIONxDIAGNOSIS_TYPE = "AUXILIARY";
	excludepolicy = "include whole CPT";
}
node Age
{
	states = ("From0To20" "From21To40" "From41ToInf" );
	position = (53 -218);
	diagnosistype = "AUXILIARY";
	DSLxSUBMODEL = "Root Submodel";
	ismapvariable = "false";
	ID = "variable4";
	label = "Age";
	DSLxEXTRA_DEFINITIONxDIAGNOSIS_TYPE = "AUXILIARY";
	excludepolicy = "include whole CPT";
}
node PaymentHistory
{
	states = ("Unacceptable" "Acceptable" "Excellent" );
	position = (-129 -262);
	diagnosistype = "AUXILIARY";
	DSLxSUBMODEL = "Root Submodel";
	ismapvariable = "false";
	ID = "variable3";
	label = "Payment History";
	DSLxEXTRA_DEFINITIONxDIAGNOSIS_TYPE = "AUXILIARY";
	excludepolicy = "include whole CPT";
}
node DebtsToIncome
{
	states = ("Over1" "Under1" "Zero" );
	position = (127 -33);
	diagnosistype = "AUXILIARY";
	DSLxSUBMODEL = "Root Submodel";
	ismapvariable = "false";
	ID = "variable2";
	label = "Debts to income ratio";
	DSLxEXTRA_DEFINITIONxDIAGNOSIS_TYPE = "AUXILIARY";
	excludepolicy = "include whole CPT";
}
potential ( Reliable | PaymentHistory Age )
{
	data = (((	0.05	0.95	)
		(	0.4	0.6	)
		(	0.6	0.4	))
		((	0.6	0.4	)
		(	0.7	0.3	)
		(	0.85	0.15	))
		((	0.7	0.3	)
		(	0.8	0.2	)
		(	0.95	0.05	)));
}
potential ( Age | )
{
	data = (	0.2	0.5	0.3	);
}
potential ( PaymentHistory | Age DebtsToIncome )
{
	data = (((	0.85	0.1	0.05	)
		(	0.65	0.25	0.1	)
		(	0.35	0.4	0.25	))
		((	0.5	0.35	0.15	)
		(	0.15	0.5	0.35	)
		(	0.15	0.35	0.5	))
		((	0.25	0.4	0.35	)
		(	0.1	0.25	0.65	)
		(	0.05	0.1	0.85	)));
}
potential ( DebtsToIncome | )
{
	data = (	0.3	0.4	0.3	);
}
